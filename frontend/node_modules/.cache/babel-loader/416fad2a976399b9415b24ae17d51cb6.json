{"ast":null,"code":"var _jsxFileName = \"/Users/salonigarg/Downloads/teamtech2020/frontend/src/components/DataVis/Sunburst.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport shallowEqual from 'shallowequal';\nimport { hsl as d3Hsl } from 'd3-color';\nimport { select as d3Select, event as d3Event } from 'd3-selection';\nimport { scaleLinear as d3ScaleLinear, scaleSqrt as d3ScaleSqrt } from 'd3-scale';\nimport { hierarchy as d3Hierarchy, partition as d3Partition } from 'd3-hierarchy';\nimport { arc as d3Arc } from 'd3-shape';\nimport { path as d3Path } from 'd3-path';\nimport { interpolate as d3Interpolate } from 'd3-interpolate'; // We have to import this event though we dont use it\n\nimport { transition as d3Transition } from 'd3-transition';\n/* REFS\n * zoomable /w/ labels -- https://bl.ocks.org/vasturiano/12da9071095fbd4df434e60d52d2d58d\n * text opacity -- https://gist.github.com/metmajer/5480307\n*/\n\n/**\n* Creates a zoomable Sunburst\n* @param {object} props\n* @param {object} props.data - see the d3 {@link https://github.com/defunctzombie/d3-examples/blob/master/dendrogram/flare.json|flare.json}\n    data for the shape that is required. \n* @param {string} props.width - width of svg\n* @param {string} props.height - height of svg. \n*   If width and height are not the same there will be dead space.\n* @param {number} props.count_member - what data element to use for slice size\n* @param {number} [props.radianCutoff=.01] - smallest slice to show in radians\n* @param {number} [props.transitionDuration=500] - ms for animation\n* @param {number} [props.saturation=.5] - base color saturation of slices\n* @param {number} [props.lightness=.5] - base color lightness of slices\n* @param {number} [props.child_brightness=.5] - value to lighten children slices\n* @param {number} [props.font_size=12] - for calculating if text fits\n* @param {func} [props.colorFunc=(node, current_color) => current_color]\n        - Custom color func for slices with heights > 0.\n* @param {func} [props.labelFunc] - returns text to slice\n* @param {func} [props.condensedLabelFunc] - backup function to try to fit less text\n        for smaller slices.\n* @param {func} [props.tooltipFunc=(data) => data.name]\n* @param {number} [props.tooltipX=20] - x pointer offset to show tooltip \n* @param {number} [props.tooltipY=20] - y pionter offset to show tooltip\n* @param {string} [props.domID] - will be random if undefined\n* @param {func} [props.onMouseover]\n* @param {func} [props.onMouseout]\n* @param {func} [props.onClick]\n* @param {string} [props.key_member] - data member to construct dom ids from\n*/\n//FIXME normalize function signatures\n//FIXME normalize case\n\nclass Sunburst extends React.Component {\n  constructor(props) {\n    super(props);\n    this._last_click = null;\n    this.radius = Math.min(this.props.width, this.props.height) / 2;\n    this.y = d3ScaleSqrt().range([0, this.radius]);\n    this.x = d3ScaleLinear().range([0, 2 * Math.PI]);\n    this.arc = d3Arc().startAngle(d => {\n      return Math.max(0, Math.min(2 * Math.PI, this.x(d.x0)));\n    }).endAngle(d => {\n      return Math.max(0, Math.min(2 * Math.PI, this.x(d.x1)));\n    }).innerRadius(d => {\n      return Math.max(0, this.y(d.y0));\n    }).outerRadius(d => {\n      return Math.max(0, this.y(d.y1));\n    });\n    this.partition = d3Partition();\n    this.hueDXScale = d3ScaleLinear().domain([0, 1]).range([0, 360]);\n    this.domId = this.props.domId || 'sunburst-wrapper-' + Math.round(Math.random() * 1e12).toString();\n    this.svg = null;\n    this.tooltipDom = null;\n    this.lastSelect = null;\n  }\n\n  componentDidMount() {\n    this.props._debug && this.props._log(\"Sunburst: componentDidMount()\");\n\n    this._create();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    this.props._debug && this.props._log(\"Sunburst: shouldComponentUpdate()\", this.props);\n\n    if (!shallowEqual(this.props, nextProps)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  _destroy_svg() {\n    this.props._debug && this.props._log(\"Sunburst: _destroy_svg()\");\n    this.svg && this.svg.selectAll('*').remove();\n    this.svg = null;\n  }\n\n  componentDidUpdate() {\n    //prevProps\n    this.props._debug && this.props._log(\"Sunburst: componentDidUpdate()\");\n\n    this._destroy_svg();\n\n    this._create();\n  }\n\n  componentWillUnmount() {\n    this.props._debug && this.props._log(\"Sunburst: componentWillUnmount()\");\n\n    this._destroy_svg();\n  }\n  /**\n   * Programatically select a slice.\n   * @param id the slice key to select. This should be the key_member set in\n   * props.\n  */\n\n\n  select(id) {\n    this.props._debug && this.props._log(\"Sunburst: select(id)\");\n    const key = '#mainArc-' + id;\n    const nodes = d3Select(key).nodes();\n\n    if (!nodes.length) {\n      this.props._warn(`could not find node with id of ${key}`);\n\n      return;\n    }\n\n    const node = nodes[0].__data__;\n\n    this._update(node);\n  }\n\n  _onClick(node) {\n    this.props._debug && this.props._log(\"Sunburst: _onClick(node)\");\n    this._last_click = node;\n  }\n  /**\n   * recomputes slice colors. If the color function changes this should be called\n   * to update to the new color scheme.\n  */\n\n\n  updateColor() {\n    this.props._debug && this.props._log(\"Sunburst: updateColor()\");\n    this.svg.selectAll('path.sunburst-main-arc').style(\"fill\", d => d.parent ? this._colorize(d) : \"white\");\n  }\n\n  _create() {\n    this.props._debug && this.props._log(\"Sunburst: _create()\");\n    if (!this.props.data) return;\n    const root = d3Hierarchy(this.props.data).sum(function (d) {\n      if (d[this.props.count_member] === undefined) this.props._warn(`props.count_member (${this.props.count_member}) is not defined on data`);\n      return !d.children || d.children.length === 0 ? d[this.props.count_member] : 0;\n    }.bind(this)); //.filter( (d) => d.depth < 4)\n\n    const data = this.partition(root).descendants().filter(d => d.x1 - d.x0 > this.props.radianCutoff); // 0.005 radians = 0.29 degrees\n\n    if (!this.svg) {\n      const w = this.props.width;\n      const h = this.props.height;\n      const el = d3Select('#' + this.domId);\n      this.svg = el.append('svg');\n      this.svg.style('class', 'sunburst-svg').style('width', w + 'px').style('height', h + 'px').attr('viewBox', `${-w / 2} ${-h / 2} ${w} ${h}`); //this.canvas = this.svg.append('g');\n      //this.svg = d3Select(\"svg\").append(\"g\").attr(\"id\", \"bigG\")\n\n      var gSlices = this.svg.selectAll(\"g\").data(data).enter().append(\"g\");\n      gSlices.exit().remove();\n      const key = this.props.key_member;\n      gSlices.append(\"path\").attr('class', d => {\n        const cursor = !d.parent || !d.children ? ' cursor-pointer' : ' cursor-pointer';\n        const evenodd = d.depth % 2 ? 'even-row' : 'odd-row';\n        return `sunburst-main-arc${cursor} ${evenodd}`;\n      }).attr('id', (d, i) => {\n        return key ? `mainArc-${d.data[key]}` : `mainArc-${i}`;\n      }).style(\"fill\", d => d.parent ? this._colorize(d) : \"#282c34\").on('click', function (node) {\n        this._onClick(node);\n\n        this.props.onClick && this.props.onClick(node);\n\n        this._update(node);\n      }.bind(this));\n\n      if (this.props.labelFunc) {\n        gSlices.append('path').attr('class', 'sunburst-hidden-arc').attr('id', (_, i) => `hiddenArc${i}`).attr('d', this._middleArcLine.bind(this)).style('fill', 'none');\n        const text = gSlices.append('text').style('pointer-events', 'none').style('dominant-baseline', 'middle').style('text-anchor', 'middle'); //.attr('display', d => this._textFits(d) ? null : 'none') //makes all text go away\n\n        text.append('textPath').attr('startOffset', '50%').attr('xlink:href', (_, i) => `#hiddenArc${i}`).text(d => this._getLabelText(d) || '');\n      }\n    }\n\n    this.props.tooltip && this._setTooltips();\n\n    this._update(root);\n  }\n\n  _update(d, i, a) {\n    this.props._debug && this.props._log(\"Sunburst: _update(d, i, a)\");\n    if (this.lastSelect && a && this.lastSelect === a[i].id) return;\n    this.lastSelect = a && a[i].id;\n    this.svg.transition().selectAll('textPath').attr(\"opacity\", 0);\n    const transition = this.svg.transition().duration(this.props.transitionDuration) // duration of transition\n    .tween(\"scale\", function () {\n      var xd = d3Interpolate(this.x.domain(), [d.x0, d.x1]),\n          yd = d3Interpolate(this.y.domain(), [d.y0, 1]),\n          yr = d3Interpolate(this.y.range(), [d.y0 ? 20 : 0, this.radius]);\n      return function (t) {\n        this.x.domain(xd(t));\n        this.y.domain(yd(t)).range(yr(t));\n      }.bind(this);\n    }.bind(this));\n    transition.selectAll('path.sunburst-hidden-arc').attrTween('d', d => () => this._middleArcLine(d)); //.style(\"fill\", (d) => d.parent ? this._colorize(d) : \"white\")\n\n    transition.selectAll('path.sunburst-main-arc').attrTween('d', d => () => {\n      const arc = this.arc(d);\n      return arc;\n    }).on(\"end\", (e, i, a) => {\n      if (!this.arc.innerRadius()(e)) // if its not visible\n        return; // get a selection of the associated text element\n\n      var arcText = d3Select(a[i].parentNode).select(\"text textPath\"); // fade in the text element and recalculate positions\n\n      arcText.transition(this.props.transitionDuration / 2).attr(\"opacity\", 1).text(d => {\n        const text = this._getLabelText(d);\n\n        return text;\n      });\n    });\n  }\n\n  _textFits(d, label) {\n    //  this.props._debug && this.props._log(\"Sunburst: _textFits(d, label)\")\n    if (!label) return false; // changed to degress\n\n    const angle = (this.arc.endAngle()(d) - this.arc.startAngle()(d)) * 57.296;\n    const radius = this.arc.outerRadius()(d);\n    const arclength = 10 * Math.PI * radius * (angle / 360); //intially was 2*Math.PI.radius... (changed to make text only appear in inner circles)\n\n    return label.length * this.props.font_size < arclength; //|| label.length * this.props.font_size > arclength;\n  }\n\n  _getLabelText(d) {\n    // this.props._debug && this.props._log(\"Sunburst: _getLabelText(d)\")\n    var label; //var x\n\n    label = this.props.labelFunc && this.props.labelFunc(d);\n    if (this._textFits(d, label)) return label;\n    label = this.props.condensedLabelFunc && this.props.condensedLabelFunc(d);\n    if (this._textFits(d, label)) return label;\n    return null;\n  }\n\n  _middleArcLine(d) {\n    this.props._debug && this.props._log(\"Sunburst: _middleArcLine(d)\");\n    const halfPi = Math.PI / 2;\n    const angles = [this.x(d.x0) - halfPi, this.x(d.x1) - halfPi];\n    const r = Math.max(0, (this.y(d.y0) + this.y(d.y1)) / 2);\n    const middleAngle = (angles[1] + angles[0]) / 2;\n    const invertDirection = middleAngle > 0 && middleAngle < Math.PI; // On lower quadrants write text ccw\n\n    if (invertDirection) {\n      angles.reverse();\n    }\n\n    const path = d3Path();\n    path.arc(0, 0, r, angles[0], angles[1], invertDirection);\n    return path.toString();\n  }\n\n  _inDomain(d) {\n    this.props._debug && this.props._log(\"Sunburst: _inDomain(d)\");\n    const d0 = this.x.domain()[0];\n    const d1 = this.x.domain()[1];\n    if (d.x0 < d0) return false;\n    if (d.x1 > d1) return false;\n    return true;\n  }\n\n  _setTooltips() {\n    this.props._debug && this.props._log(\"Sunburst: _setTooltips(d)\");\n    this.tooltipDom = d3Select(`#${this.domId}`).append('div').attr('class', 'sunburst-tooltip').style('position', 'absolute').style('z-index', '10').style('opacity', '0').style('text-align', 'center').style('border-radius', '8px') //.style('max-width', '20em')\n    .style('pointer-events', 'none').style('background', 'lightsteelblue').style('padding', '3px');\n    const dx = this.props.tooltipX;\n    const dy = this.props.tooltipY;\n    this.svg.selectAll('path.sunburst-main-arc').on(\"mouseover\", function (d) {\n      if (this.props.tooltip) {\n        this.tooltipDom.html(this.props.tooltipFunc(d.data)).style(\"left\", d3Event.pageX + dx + \"px\").style(\"top\", d3Event.pageY + dy + \"px\");\n        this.tooltipDom.transition().style(\"opacity\", .9).duration(200);\n        this.props.onMouseover && this.props.onMouseover(d.data);\n      }\n    }.bind(this)).on(\"mouseout\", function (d) {\n      this.props.tooltip && this.tooltipDom.transition().style(\"opacity\", 0).duration(500);\n      this.props.onMouseout && this.props.onMouseout(d.data);\n    }.bind(this));\n  }\n\n  _colorize(d) {\n    this.props._debug && this.props._log(\"Sunburst: _colorize(d)\");\n    let hue;\n    const current = d;\n\n    if (current.depth === 0) {\n      return '#33cccc';\n    }\n\n    const {\n      lightness,\n      saturation,\n      child_brightness\n    } = this.props;\n\n    if (current.depth <= 1) {\n      hue = this.hueDXScale(d.x0);\n      current.fill = d3Hsl(hue, saturation, lightness);\n      return current.fill;\n    }\n\n    current.fill = current.parent.fill.brighter(child_brightness);\n    const thishsl = d3Hsl(current.fill);\n    hue = this.hueDXScale(current.x0);\n    const colorshift = thishsl.h + hue / 4; //used to be 4 made it 5 to make children darker\n\n    const c = d3Hsl(colorshift, thishsl.s, thishsl.l); //return (this.props.colorFunc || this.props.colorFunc(d,c)) || c\n\n    const hasColorFn = !!this.props.colorFunc;\n    return hasColorFn ? this.props.colorFunc(d, c) : c;\n  } // we have to render first then componentMounted will give us\n  // access to the dom\n\n\n  render() {\n    this.props._debug && this.props._log(\"Sunburst: render()\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sunburst-wrapper\",\n      id: this.domId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nSunburst.propTypes = {\n  data: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  count_member: PropTypes.string.isRequired,\n  // requried /w/ default\n  tooltip: PropTypes.bool.isRequired,\n  // FIXME get rid of this\n  radianCutoff: PropTypes.number.isRequired,\n  // smallest slice to show in radians\n  transitionDuration: PropTypes.number.isRequired,\n  // ms for animation\n  saturation: PropTypes.number.isRequired,\n  // base saturation of arcs\n  lightness: PropTypes.number.isRequired,\n  // base lightness of parent arcs\n  child_brightness: PropTypes.number.isRequired,\n  // value to lighten children\n  font_size: PropTypes.number.isRequired,\n  // for calculating if text fits\n  colorFunc: PropTypes.func,\n  // custom colorizing for slice\n  tooltipFunc: PropTypes.func,\n  tooltipX: PropTypes.number.isRequired,\n  // offset x to place tooltip\n  tooltipY: PropTypes.number.isRequired,\n  // ofset y to place tooltip\n  domId: PropTypes.string,\n  // will be random if undefined\n  onMouseover: PropTypes.func,\n  onMouseout: PropTypes.func,\n  onClick: PropTypes.func,\n  labelFunc: PropTypes.func,\n  // returns text for slice\n  condensedLabelFunc: PropTypes.func,\n  // backup function to try to fit text\n  key_member: PropTypes.string,\n  // unique id\n  _debug: PropTypes.bool,\n  _log: PropTypes.func,\n  _warn: PropTypes.func\n};\nSunburst.defaultProps = {\n  tooltip: true,\n  tooltipFunc: data => data.name,\n  radianCutoff: .0001,\n  transitionDuration: 300,\n  colorFunc: (node, current_color) => current_color,\n  key_member: 'key',\n  font_size: 10,\n  tooltipX: 20,\n  tooltipY: 20,\n  saturation: .8,\n  lightness: .6,\n  child_brightness: .7,\n  _debug: false,\n  _log: console.log,\n  _warn: console.warn\n};\nexport default Sunburst;","map":{"version":3,"sources":["/Users/salonigarg/Downloads/teamtech2020/frontend/src/components/DataVis/Sunburst.js"],"names":["React","PropTypes","shallowEqual","hsl","d3Hsl","select","d3Select","event","d3Event","scaleLinear","d3ScaleLinear","scaleSqrt","d3ScaleSqrt","hierarchy","d3Hierarchy","partition","d3Partition","arc","d3Arc","path","d3Path","interpolate","d3Interpolate","transition","d3Transition","Sunburst","Component","constructor","props","_last_click","radius","Math","min","width","height","y","range","x","PI","startAngle","d","max","x0","endAngle","x1","innerRadius","y0","outerRadius","y1","hueDXScale","domain","domId","round","random","toString","svg","tooltipDom","lastSelect","componentDidMount","_debug","_log","_create","shouldComponentUpdate","nextProps","_destroy_svg","selectAll","remove","componentDidUpdate","componentWillUnmount","id","key","nodes","length","_warn","node","__data__","_update","_onClick","updateColor","style","parent","_colorize","data","root","sum","count_member","undefined","children","bind","descendants","filter","radianCutoff","w","h","el","append","attr","gSlices","enter","exit","key_member","cursor","evenodd","depth","i","on","onClick","labelFunc","_","_middleArcLine","text","_getLabelText","tooltip","_setTooltips","a","duration","transitionDuration","tween","xd","yd","yr","t","attrTween","e","arcText","parentNode","_textFits","label","angle","arclength","font_size","condensedLabelFunc","halfPi","angles","r","middleAngle","invertDirection","reverse","_inDomain","d0","d1","dx","tooltipX","dy","tooltipY","html","tooltipFunc","pageX","pageY","onMouseover","onMouseout","hue","current","lightness","saturation","child_brightness","fill","brighter","thishsl","colorshift","c","s","l","hasColorFn","colorFunc","render","propTypes","object","isRequired","string","bool","number","func","defaultProps","name","current_color","console","log","warn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AAEA,SAASC,GAAG,IAAIC,KAAhB,QAA6B,UAA7B;AACA,SAASC,MAAM,IAAIC,QAAnB,EAA6BC,KAAK,IAAIC,OAAtC,QAAqD,cAArD;AACA,SAASC,WAAW,IAAIC,aAAxB,EAAuCC,SAAS,IAAIC,WAApD,QAAuE,UAAvE;AACA,SAASC,SAAS,IAAIC,WAAtB,EAAmCC,SAAS,IAAIC,WAAhD,QAAmE,cAAnE;AACA,SAASC,GAAG,IAAIC,KAAhB,QAA6B,UAA7B;AACA,SAASC,IAAI,IAAIC,MAAjB,QAA+B,SAA/B;AACA,SAASC,WAAW,IAAIC,aAAxB,QAA6C,gBAA7C,C,CAEA;;AACA,SAASC,UAAU,IAAIC,YAAvB,QAA2C,eAA3C;AAEA;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;;AACA,MAAMC,QAAN,SAAuBzB,KAAK,CAAC0B,SAA7B,CAAuC;AAoDnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,WAAL,GAAmB,IAAnB;AACA,SAAKC,MAAL,GAAeC,IAAI,CAACC,GAAL,CAAS,KAAKJ,KAAL,CAAWK,KAApB,EAA2B,KAAKL,KAAL,CAAWM,MAAtC,IAAgD,CAA/D;AACA,SAAKC,CAAL,GAASvB,WAAW,GACfwB,KADI,CACE,CAAC,CAAD,EAAI,KAAKN,MAAT,CADF,CAAT;AAGA,SAAKO,CAAL,GAAQ3B,aAAa,GAChB0B,KADG,CACG,CAAC,CAAD,EAAI,IAAIL,IAAI,CAACO,EAAb,CADH,CAAR;AAGA,SAAKrB,GAAL,GAAWC,KAAK,GACPqB,UADE,CACUC,CAAD,IAAO;AAAE,aAAOT,IAAI,CAACU,GAAL,CAAS,CAAT,EAAYV,IAAI,CAACC,GAAL,CAAS,IAAID,IAAI,CAACO,EAAlB,EAAsB,KAAKD,CAAL,CAAOG,CAAC,CAACE,EAAT,CAAtB,CAAZ,CAAP;AAA0D,KAD5E,EAEFC,QAFE,CAEQH,CAAD,IAAO;AAAE,aAAOT,IAAI,CAACU,GAAL,CAAS,CAAT,EAAYV,IAAI,CAACC,GAAL,CAAS,IAAID,IAAI,CAACO,EAAlB,EAAsB,KAAKD,CAAL,CAAOG,CAAC,CAACI,EAAT,CAAtB,CAAZ,CAAP;AAA0D,KAF1E,EAGFC,WAHE,CAGWL,CAAD,IAAO;AAAE,aAAOT,IAAI,CAACU,GAAL,CAAS,CAAT,EAAY,KAAKN,CAAL,CAAOK,CAAC,CAACM,EAAT,CAAZ,CAAP;AAAmC,KAHtD,EAIFC,WAJE,CAIWP,CAAD,IAAO;AAAE,aAAOT,IAAI,CAACU,GAAL,CAAS,CAAT,EAAY,KAAKN,CAAL,CAAOK,CAAC,CAACQ,EAAT,CAAZ,CAAP;AAAmC,KAJtD,CAAX;AAMA,SAAKjC,SAAL,GAAiBC,WAAW,EAA5B;AAEA,SAAKiC,UAAL,GAAkBvC,aAAa,GAC1BwC,MADa,CACN,CAAC,CAAD,EAAI,CAAJ,CADM,EAEbd,KAFa,CAEP,CAAC,CAAD,EAAI,GAAJ,CAFO,CAAlB;AAIA,SAAKe,KAAL,GAAa,KAAKvB,KAAL,CAAWuB,KAAX,IAAqB,sBAAsBpB,IAAI,CAACqB,KAAL,CAAWrB,IAAI,CAACsB,MAAL,KAAgB,IAA3B,EAAiCC,QAAjC,EAAxD;AACA,SAAKC,GAAL,GAAW,IAAX;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAK9B,KAAL,CAAW+B,MAAX,IAAqB,KAAK/B,KAAL,CAAWgC,IAAX,CAAgB,+BAAhB,CAArB;;AACA,SAAKC,OAAL;AACH;;AAEDC,EAAAA,qBAAqB,CAACC,SAAD,EAAY;AAC7B,SAAKnC,KAAL,CAAW+B,MAAX,IAAqB,KAAK/B,KAAL,CAAWgC,IAAX,CAAgB,mCAAhB,EAAqD,KAAKhC,KAA1D,CAArB;;AACA,QAAI,CAAC1B,YAAY,CAAC,KAAK0B,KAAN,EAAamC,SAAb,CAAjB,EAA0C;AACtC,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH;;AAEDC,EAAAA,YAAY,GAAG;AACX,SAAKpC,KAAL,CAAW+B,MAAX,IAAqB,KAAK/B,KAAL,CAAWgC,IAAX,CAAgB,0BAAhB,CAArB;AACN,SAAKL,GAAL,IAAY,KAAKA,GAAL,CAASU,SAAT,CAAmB,GAAnB,EAAwBC,MAAxB,EAAZ;AACM,SAAKX,GAAL,GAAW,IAAX;AACH;;AAEDY,EAAAA,kBAAkB,GAAG;AAAE;AACnB,SAAKvC,KAAL,CAAW+B,MAAX,IAAqB,KAAK/B,KAAL,CAAWgC,IAAX,CAAgB,gCAAhB,CAArB;;AACA,SAAKI,YAAL;;AACA,SAAKH,OAAL;AACH;;AAEDO,EAAAA,oBAAoB,GAAG;AACnB,SAAKxC,KAAL,CAAW+B,MAAX,IAAqB,KAAK/B,KAAL,CAAWgC,IAAX,CAAgB,kCAAhB,CAArB;;AACA,SAAKI,YAAL;AACH;AACD;;;;;;;AAKA3D,EAAAA,MAAM,CAACgE,EAAD,EAAK;AACP,SAAKzC,KAAL,CAAW+B,MAAX,IAAqB,KAAK/B,KAAL,CAAWgC,IAAX,CAAgB,sBAAhB,CAArB;AACA,UAAMU,GAAG,GAAG,cAAcD,EAA1B;AACA,UAAME,KAAK,GAAGjE,QAAQ,CAACgE,GAAD,CAAR,CAAcC,KAAd,EAAd;;AACA,QAAI,CAACA,KAAK,CAACC,MAAX,EAAmB;AACf,WAAK5C,KAAL,CAAW6C,KAAX,CAAkB,kCAAiCH,GAAI,EAAvD;;AACA;AACH;;AACD,UAAMI,IAAI,GAAGH,KAAK,CAAC,CAAD,CAAL,CAASI,QAAtB;;AACA,SAAKC,OAAL,CAAaF,IAAb;AACH;;AAEDG,EAAAA,QAAQ,CAACH,IAAD,EAAO;AACX,SAAK9C,KAAL,CAAW+B,MAAX,IAAqB,KAAK/B,KAAL,CAAWgC,IAAX,CAAgB,0BAAhB,CAArB;AACA,SAAK/B,WAAL,GAAmB6C,IAAnB;AACH;AAEL;;;;;;AAIII,EAAAA,WAAW,GAAI;AACX,SAAKlD,KAAL,CAAW+B,MAAX,IAAqB,KAAK/B,KAAL,CAAWgC,IAAX,CAAgB,yBAAhB,CAArB;AACA,SAAKL,GAAL,CAASU,SAAT,CAAmB,wBAAnB,EACKc,KADL,CACW,MADX,EACoBvC,CAAD,IAAOA,CAAC,CAACwC,MAAF,GAAW,KAAKC,SAAL,CAAezC,CAAf,CAAX,GAA+B,OADzD;AAEH;;AAEDqB,EAAAA,OAAO,GAAG;AACN,SAAKjC,KAAL,CAAW+B,MAAX,IAAqB,KAAK/B,KAAL,CAAWgC,IAAX,CAAgB,qBAAhB,CAArB;AACA,QAAI,CAAC,KAAKhC,KAAL,CAAWsD,IAAhB,EAAsB;AAEtB,UAAMC,IAAI,GAAGrE,WAAW,CAAC,KAAKc,KAAL,CAAWsD,IAAZ,CAAX,CACRE,GADQ,CACJ,UAAS5C,CAAT,EAAY;AACb,UAAIA,CAAC,CAAC,KAAKZ,KAAL,CAAWyD,YAAZ,CAAD,KAA+BC,SAAnC,EACI,KAAK1D,KAAL,CAAW6C,KAAX,CAAkB,uBAAsB,KAAK7C,KAAL,CAAWyD,YAAa,0BAAhE;AACJ,aAAO,CAAC7C,CAAC,CAAC+C,QAAH,IAAe/C,CAAC,CAAC+C,QAAF,CAAWf,MAAX,KAAsB,CAArC,GAAyChC,CAAC,CAAC,KAAKZ,KAAL,CAAWyD,YAAZ,CAA1C,GAAqE,CAA5E;AACH,KAJI,CAIHG,IAJG,CAIE,IAJF,CADI,CAAb,CAJM,CAUN;;AAEA,UAAMN,IAAI,GAAG,KAAKnE,SAAL,CAAeoE,IAAf,EACRM,WADQ,GAERC,MAFQ,CAEClD,CAAD,IAAOA,CAAC,CAACI,EAAF,GAAOJ,CAAC,CAACE,EAAT,GAAc,KAAKd,KAAL,CAAW+D,YAFhC,CAAb,CAZM,CAcqD;;AAE3D,QAAI,CAAC,KAAKpC,GAAV,EAAe;AACX,YAAMqC,CAAC,GAAG,KAAKhE,KAAL,CAAWK,KAArB;AACA,YAAM4D,CAAC,GAAG,KAAKjE,KAAL,CAAWM,MAArB;AACA,YAAM4D,EAAE,GAAGxF,QAAQ,CAAC,MAAM,KAAK6C,KAAZ,CAAnB;AAEA,WAAKI,GAAL,GAAWuC,EAAE,CAACC,MAAH,CAAU,KAAV,CAAX;AACA,WAAKxC,GAAL,CACGwB,KADH,CACS,OADT,EACkB,cADlB,EAEGA,KAFH,CAES,OAFT,EAEkBa,CAAC,GAAG,IAFtB,EAGGb,KAHH,CAGS,QAHT,EAGmBc,CAAC,GAAG,IAHvB,EAIGG,IAJH,CAIQ,SAJR,EAIoB,GAAE,CAACJ,CAAD,GAAG,CAAE,IAAG,CAACC,CAAD,GAAG,CAAE,IAAGD,CAAE,IAAGC,CAAE,EAJ7C,EANW,CAWX;AACA;;AAEA,UAAII,OAAO,GAAG,KAAK1C,GAAL,CAASU,SAAT,CAAmB,GAAnB,EACTiB,IADS,CACJA,IADI,EAETgB,KAFS,GAGTH,MAHS,CAGF,GAHE,CAAd;AAKAE,MAAAA,OAAO,CAACE,IAAR,GAAejC,MAAf;AAEA,YAAMI,GAAG,GAAG,KAAK1C,KAAL,CAAWwE,UAAvB;AACAH,MAAAA,OAAO,CAACF,MAAR,CAAe,MAAf,EACKC,IADL,CACU,OADV,EACoBxD,CAAD,IAAO;AAClB,cAAM6D,MAAM,GAAI,CAAC7D,CAAC,CAACwC,MAAH,IAAa,CAACxC,CAAC,CAAC+C,QAAjB,GAA6B,iBAA7B,GAAiD,iBAAhE;AACA,cAAMe,OAAO,GAAG9D,CAAC,CAAC+D,KAAF,GAAQ,CAAR,GAAY,UAAZ,GAA0B,SAA1C;AACA,eAAQ,oBAAmBF,MAAO,IAAGC,OAAQ,EAA7C;AACH,OALL,EAKON,IALP,CAKY,IALZ,EAKkB,CAACxD,CAAD,EAAIgE,CAAJ,KAAU;AACpB,eAAOlC,GAAG,GAAI,WAAU9B,CAAC,CAAC0C,IAAF,CAAOZ,GAAP,CAAY,EAA1B,GAA+B,WAAUkC,CAAE,EAArD;AACH,OAPL,EAOOzB,KAPP,CAOa,MAPb,EAOsBvC,CAAD,IAAOA,CAAC,CAACwC,MAAF,GAAW,KAAKC,SAAL,CAAezC,CAAf,CAAX,GAA+B,SAP3D,EAQKiE,EARL,CAQQ,OARR,EAQiB,UAAS/B,IAAT,EAAe;AACxB,aAAKG,QAAL,CAAcH,IAAd;;AACA,aAAK9C,KAAL,CAAW8E,OAAX,IAAsB,KAAK9E,KAAL,CAAW8E,OAAX,CAAmBhC,IAAnB,CAAtB;;AACA,aAAKE,OAAL,CAAaF,IAAb;AACH,OAJY,CAIXc,IAJW,CAIN,IAJM,CARjB;;AAcA,UAAI,KAAK5D,KAAL,CAAW+E,SAAf,EAA0B;AACtBV,QAAAA,OAAO,CAACF,MAAR,CAAe,MAAf,EACKC,IADL,CACU,OADV,EACmB,qBADnB,EAEKA,IAFL,CAEU,IAFV,EAEgB,CAACY,CAAD,EAAIJ,CAAJ,KAAW,YAAWA,CAAE,EAFxC,EAGKR,IAHL,CAGU,GAHV,EAGe,KAAKa,cAAL,CAAoBrB,IAApB,CAAyB,IAAzB,CAHf,EAIKT,KAJL,CAIW,MAJX,EAImB,MAJnB;AAMA,cAAM+B,IAAI,GAAGb,OAAO,CAACF,MAAR,CAAe,MAAf,EACRhB,KADQ,CACF,gBADE,EACgB,MADhB,EAERA,KAFQ,CAEF,mBAFE,EAEmB,QAFnB,EAGRA,KAHQ,CAGF,aAHE,EAGa,QAHb,CAAb,CAPsB,CAWtB;;AAEA+B,QAAAA,IAAI,CAACf,MAAL,CAAY,UAAZ,EACKC,IADL,CACU,aADV,EACwB,KADxB,EAEKA,IAFL,CAEU,YAFV,EAEwB,CAACY,CAAD,EAAIJ,CAAJ,KAAW,aAAYA,CAAE,EAFjD,EAGKM,IAHL,CAGUtE,CAAC,IAAI,KAAKuE,aAAL,CAAmBvE,CAAnB,KAAyB,EAHxC;AAIH;AACJ;;AACD,SAAKZ,KAAL,CAAWoF,OAAX,IAAsB,KAAKC,YAAL,EAAtB;;AACA,SAAKrC,OAAL,CAAaO,IAAb;AACH;;AAEDP,EAAAA,OAAO,CAACpC,CAAD,EAAIgE,CAAJ,EAAOU,CAAP,EAAU;AACb,SAAKtF,KAAL,CAAW+B,MAAX,IAAqB,KAAK/B,KAAL,CAAWgC,IAAX,CAAgB,4BAAhB,CAArB;AAEA,QAAI,KAAKH,UAAL,IAAmByD,CAAnB,IAAwB,KAAKzD,UAAL,KAAoByD,CAAC,CAACV,CAAD,CAAD,CAAKnC,EAArD,EACI;AAEJ,SAAKZ,UAAL,GAAkByD,CAAC,IAAIA,CAAC,CAACV,CAAD,CAAD,CAAKnC,EAA5B;AAEA,SAAKd,GAAL,CAAShC,UAAT,GAAsB0C,SAAtB,CAAgC,UAAhC,EAA4C+B,IAA5C,CAAiD,SAAjD,EAA4D,CAA5D;AAEA,UAAMzE,UAAU,GAAG,KAAKgC,GAAL,CAAShC,UAAT,GACtB4F,QADsB,CACb,KAAKvF,KAAL,CAAWwF,kBADE,EACkB;AADlB,KAEtBC,KAFsB,CAEhB,OAFgB,EAEP,YAAW;AAC3B,UAAIC,EAAE,GAAGhG,aAAa,CAAC,KAAKe,CAAL,CAAOa,MAAP,EAAD,EAAkB,CAACV,CAAC,CAACE,EAAH,EAAQF,CAAC,CAACI,EAAV,CAAlB,CAAtB;AAAA,UACA2E,EAAE,GAAGjG,aAAa,CAAC,KAAKa,CAAL,CAAOe,MAAP,EAAD,EAAkB,CAACV,CAAC,CAACM,EAAH,EAAQ,CAAR,CAAlB,CADlB;AAAA,UAEA0E,EAAE,GAAGlG,aAAa,CAAC,KAAKa,CAAL,CAAOC,KAAP,EAAD,EAAiB,CAAEI,CAAC,CAACM,EAAF,GAAQ,EAAR,GAAc,CAAhB,EAAqB,KAAKhB,MAA1B,CAAjB,CAFlB;AAGA,aAAO,UAAS2F,CAAT,EAAY;AAAE,aAAKpF,CAAL,CAAOa,MAAP,CAAcoE,EAAE,CAACG,CAAD,CAAhB;AAAsB,aAAKtF,CAAL,CAAOe,MAAP,CAAcqE,EAAE,CAACE,CAAD,CAAhB,EAAqBrF,KAArB,CAA2BoF,EAAE,CAACC,CAAD,CAA7B;AAAoC,OAAxE,CAAyEjC,IAAzE,CAA8E,IAA9E,CAAP;AACG,KALa,CAKZA,IALY,CAKP,IALO,CAFO,CAAnB;AASAjE,IAAAA,UAAU,CAAC0C,SAAX,CAAqB,0BAArB,EACKyD,SADL,CACe,GADf,EACoBlF,CAAC,IAAI,MAAM,KAAKqE,cAAL,CAAoBrE,CAApB,CAD/B,EAnBa,CAsBb;;AACAjB,IAAAA,UAAU,CAAC0C,SAAX,CAAqB,wBAArB,EACKyD,SADL,CACe,GADf,EACoBlF,CAAC,IAAI,MAAM;AACvB,YAAMvB,GAAG,GAAG,KAAKA,GAAL,CAASuB,CAAT,CAAZ;AACA,aAAOvB,GAAP;AACH,KAJL,EAIOwF,EAJP,CAIU,KAJV,EAIiB,CAACkB,CAAD,EAAInB,CAAJ,EAAOU,CAAP,KAAa;AACtB,UAAI,CAAC,KAAKjG,GAAL,CAAS4B,WAAT,GAAuB8E,CAAvB,CAAL,EAAgC;AAC5B,eAFkB,CAGtB;;AACA,UAAIC,OAAO,GAAGtH,QAAQ,CAAC4G,CAAC,CAACV,CAAD,CAAD,CAAKqB,UAAN,CAAR,CAA0BxH,MAA1B,CAAiC,eAAjC,CAAd,CAJsB,CAKtB;;AACAuH,MAAAA,OAAO,CAACrG,UAAR,CAAmB,KAAKK,KAAL,CAAWwF,kBAAX,GAA+B,CAAlD,EACKpB,IADL,CACU,SADV,EACqB,CADrB,EAEKc,IAFL,CAEWtE,CAAD,IAAO;AACT,cAAMsE,IAAI,GAAG,KAAKC,aAAL,CAAmBvE,CAAnB,CAAb;;AACA,eAAOsE,IAAP;AACH,OALL;AAMP,KAhBD;AAiBH;;AAEDgB,EAAAA,SAAS,CAACtF,CAAD,EAAIuF,KAAJ,EAAW;AAClB;AAEE,QAAI,CAACA,KAAL,EACI,OAAO,KAAP,CAJY,CAKhB;;AACA,UAAMC,KAAK,GAAG,CAAC,KAAK/G,GAAL,CAAS0B,QAAT,GAAoBH,CAApB,IAAyB,KAAKvB,GAAL,CAASsB,UAAT,GAAsBC,CAAtB,CAA1B,IAAsD,MAApE;AACA,UAAMV,MAAM,GAAG,KAAKb,GAAL,CAAS8B,WAAT,GAAuBP,CAAvB,CAAf;AACA,UAAMyF,SAAS,GAAI,KAAGlG,IAAI,CAACO,EAAR,GAAWR,MAAX,IAAmBkG,KAAK,GAAG,GAA3B,CAAnB,CARgB,CAQmC;;AACnD,WAAOD,KAAK,CAACvD,MAAN,GAAe,KAAK5C,KAAL,CAAWsG,SAA1B,GAAsCD,SAA7C,CATgB,CASuC;AAC1D;;AAGDlB,EAAAA,aAAa,CAACvE,CAAD,EAAI;AACd;AACC,QAAIuF,KAAJ,CAFa,CAGb;;AACAA,IAAAA,KAAK,GAAG,KAAKnG,KAAL,CAAW+E,SAAX,IAAwB,KAAK/E,KAAL,CAAW+E,SAAX,CAAqBnE,CAArB,CAAhC;AACA,QAAI,KAAKsF,SAAL,CAAetF,CAAf,EAAiBuF,KAAjB,CAAJ,EACI,OAAOA,KAAP;AACLA,IAAAA,KAAK,GAAG,KAAKnG,KAAL,CAAWuG,kBAAX,IAAiC,KAAKvG,KAAL,CAAWuG,kBAAX,CAA8B3F,CAA9B,CAAzC;AACA,QAAI,KAAKsF,SAAL,CAAetF,CAAf,EAAiBuF,KAAjB,CAAJ,EACK,OAAOA,KAAP;AACJ,WAAO,IAAP;AACH;;AAEDlB,EAAAA,cAAc,CAACrE,CAAD,EAAI;AACd,SAAKZ,KAAL,CAAW+B,MAAX,IAAqB,KAAK/B,KAAL,CAAWgC,IAAX,CAAgB,6BAAhB,CAArB;AACA,UAAMwE,MAAM,GAAGrG,IAAI,CAACO,EAAL,GAAQ,CAAvB;AACA,UAAM+F,MAAM,GAAG,CAAC,KAAKhG,CAAL,CAAOG,CAAC,CAACE,EAAT,IAAe0F,MAAhB,EAAwB,KAAK/F,CAAL,CAAOG,CAAC,CAACI,EAAT,IAAewF,MAAvC,CAAf;AACA,UAAME,CAAC,GAAGvG,IAAI,CAACU,GAAL,CAAS,CAAT,EAAY,CAAC,KAAKN,CAAL,CAAOK,CAAC,CAACM,EAAT,IAAe,KAAKX,CAAL,CAAOK,CAAC,CAACQ,EAAT,CAAhB,IAAgC,CAA5C,CAAV;AAEA,UAAMuF,WAAW,GAAG,CAACF,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAAnB,IAA0B,CAA9C;AACA,UAAMG,eAAe,GAAGD,WAAW,GAAG,CAAd,IAAmBA,WAAW,GAAGxG,IAAI,CAACO,EAA9D,CAPc,CAOoD;;AAClE,QAAIkG,eAAJ,EAAqB;AAAEH,MAAAA,MAAM,CAACI,OAAP;AAAmB;;AAE1C,UAAMtH,IAAI,GAAGC,MAAM,EAAnB;AACAD,IAAAA,IAAI,CAACF,GAAL,CAAS,CAAT,EAAY,CAAZ,EAAeqH,CAAf,EAAkBD,MAAM,CAAC,CAAD,CAAxB,EAA6BA,MAAM,CAAC,CAAD,CAAnC,EAAwCG,eAAxC;AACA,WAAOrH,IAAI,CAACmC,QAAL,EAAP;AACH;;AAEDoF,EAAAA,SAAS,CAAClG,CAAD,EAAI;AACT,SAAKZ,KAAL,CAAW+B,MAAX,IAAqB,KAAK/B,KAAL,CAAWgC,IAAX,CAAgB,wBAAhB,CAArB;AACA,UAAM+E,EAAE,GAAG,KAAKtG,CAAL,CAAOa,MAAP,GAAgB,CAAhB,CAAX;AACA,UAAM0F,EAAE,GAAG,KAAKvG,CAAL,CAAOa,MAAP,GAAgB,CAAhB,CAAX;AACA,QAAIV,CAAC,CAACE,EAAF,GAAOiG,EAAX,EACI,OAAO,KAAP;AACJ,QAAInG,CAAC,CAACI,EAAF,GAAOgG,EAAX,EACI,OAAO,KAAP;AACJ,WAAO,IAAP;AACH;;AAED3B,EAAAA,YAAY,GAAG;AAEX,SAAKrF,KAAL,CAAW+B,MAAX,IAAqB,KAAK/B,KAAL,CAAWgC,IAAX,CAAgB,2BAAhB,CAArB;AACA,SAAKJ,UAAL,GAAkBlD,QAAQ,CAAE,IAAG,KAAK6C,KAAM,EAAhB,CAAR,CACb4C,MADa,CACN,KADM,EAEtBC,IAFsB,CAEjB,OAFiB,EAER,kBAFQ,EAGbjB,KAHa,CAGP,UAHO,EAGK,UAHL,EAIbA,KAJa,CAIP,SAJO,EAII,IAJJ,EAKbA,KALa,CAKP,SALO,EAKI,GALJ,EAMbA,KANa,CAMP,YANO,EAMO,QANP,EAObA,KAPa,CAOP,eAPO,EAOU,KAPV,EAQd;AARc,KASbA,KATa,CASP,gBATO,EASW,MATX,EAUbA,KAVa,CAUP,YAVO,EAUO,gBAVP,EAWbA,KAXa,CAWP,SAXO,EAWI,KAXJ,CAAlB;AAaA,UAAM8D,EAAE,GAAG,KAAKjH,KAAL,CAAWkH,QAAtB;AACA,UAAMC,EAAE,GAAG,KAAKnH,KAAL,CAAWoH,QAAtB;AACA,SAAKzF,GAAL,CAASU,SAAT,CAAmB,wBAAnB,EACKwC,EADL,CACQ,WADR,EACqB,UAASjE,CAAT,EAAY;AACzB,UAAI,KAAKZ,KAAL,CAAWoF,OAAf,EAAwB;AAChB,aAAKxD,UAAL,CAAgByF,IAAhB,CAAqB,KAAKrH,KAAL,CAAWsH,WAAX,CAAuB1G,CAAC,CAAC0C,IAAzB,CAArB,EACKH,KADL,CACW,MADX,EACoBvE,OAAO,CAAC2I,KAAR,GAAcN,EAAf,GAAqB,IADxC,EAEK9D,KAFL,CAEW,KAFX,EAEmBvE,OAAO,CAAC4I,KAAR,GAAcL,EAAf,GAAqB,IAFvC;AAGA,aAAKvF,UAAL,CAAgBjC,UAAhB,GACKwD,KADL,CACW,SADX,EACsB,EADtB,EAEKoC,QAFL,CAEc,GAFd;AAIR,aAAKvF,KAAL,CAAWyH,WAAX,IAA0B,KAAKzH,KAAL,CAAWyH,WAAX,CAAuB7G,CAAC,CAAC0C,IAAzB,CAA1B;AACC;AACJ,KAXgB,CAWfM,IAXe,CAWV,IAXU,CADrB,EAaKiB,EAbL,CAaQ,UAbR,EAaoB,UAASjE,CAAT,EAAY;AACxB,WAAKZ,KAAL,CAAWoF,OAAX,IAAsB,KAAKxD,UAAL,CAAgBjC,UAAhB,GACjBwD,KADiB,CACX,SADW,EACA,CADA,EAEjBoC,QAFiB,CAER,GAFQ,CAAtB;AAIA,WAAKvF,KAAL,CAAW0H,UAAX,IAAyB,KAAK1H,KAAL,CAAW0H,UAAX,CAAsB9G,CAAC,CAAC0C,IAAxB,CAAzB;AACH,KANe,CAMdM,IANc,CAMT,IANS,CAbpB;AAoBH;;AAEDP,EAAAA,SAAS,CAACzC,CAAD,EAAI;AACT,SAAKZ,KAAL,CAAW+B,MAAX,IAAqB,KAAK/B,KAAL,CAAWgC,IAAX,CAAgB,wBAAhB,CAArB;AACA,QAAI2F,GAAJ;AACA,UAAMC,OAAO,GAAGhH,CAAhB;;AACA,QAAIgH,OAAO,CAACjD,KAAR,KAAkB,CAAtB,EAAyB;AACrB,aAAO,SAAP;AACH;;AACD,UAAM;AAACkD,MAAAA,SAAD;AAAYC,MAAAA,UAAZ;AAAwBC,MAAAA;AAAxB,QAA4C,KAAK/H,KAAvD;;AACA,QAAI4H,OAAO,CAACjD,KAAR,IAAiB,CAArB,EAAwB;AACpBgD,MAAAA,GAAG,GAAG,KAAKtG,UAAL,CAAgBT,CAAC,CAACE,EAAlB,CAAN;AACA8G,MAAAA,OAAO,CAACI,IAAR,GAAexJ,KAAK,CAACmJ,GAAD,EAAMG,UAAN,EAAkBD,SAAlB,CAApB;AACA,aAAOD,OAAO,CAACI,IAAf;AACH;;AACDJ,IAAAA,OAAO,CAACI,IAAR,GAAeJ,OAAO,CAACxE,MAAR,CAAe4E,IAAf,CAAoBC,QAApB,CAA6BF,gBAA7B,CAAf;AACA,UAAMG,OAAO,GAAG1J,KAAK,CAACoJ,OAAO,CAACI,IAAT,CAArB;AACAL,IAAAA,GAAG,GAAG,KAAKtG,UAAL,CAAgBuG,OAAO,CAAC9G,EAAxB,CAAN;AACA,UAAMqH,UAAU,GAAGD,OAAO,CAACjE,CAAR,GAAa0D,GAAG,GAAG,CAAtC,CAhBS,CAgBiC;;AAC1C,UAAMS,CAAC,GAAG5J,KAAK,CAAC2J,UAAD,EAAaD,OAAO,CAACG,CAArB,EAAwBH,OAAO,CAACI,CAAhC,CAAf,CAjBS,CAkBT;;AACA,UAAMC,UAAU,GAAG,CAAC,CAAC,KAAKvI,KAAL,CAAWwI,SAAhC;AACA,WAAOD,UAAU,GAAG,KAAKvI,KAAL,CAAWwI,SAAX,CAAqB5H,CAArB,EAAwBwH,CAAxB,CAAH,GAAgCA,CAAjD;AACH,GApXkC,CAsXnC;AACA;;;AACAK,EAAAA,MAAM,GAAG;AACL,SAAKzI,KAAL,CAAW+B,MAAX,IAAqB,KAAK/B,KAAL,CAAWgC,IAAX,CAAgB,oBAAhB,CAArB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,EAAE,EAAE,KAAKT,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AA7XkC;;AAAjC1B,Q,CAEK6I,S,GAAY;AACfpF,EAAAA,IAAI,EAAEjF,SAAS,CAACsK,MAAV,CAAiBC,UADR;AAEfvI,EAAAA,KAAK,EAAEhC,SAAS,CAACwK,MAAV,CAAiBD,UAFT;AAGftI,EAAAA,MAAM,EAAEjC,SAAS,CAACwK,MAAV,CAAiBD,UAHV;AAIfnF,EAAAA,YAAY,EAAEpF,SAAS,CAACwK,MAAV,CAAiBD,UAJhB;AAMrB;AACMxD,EAAAA,OAAO,EAAE/G,SAAS,CAACyK,IAAV,CAAeF,UAPT;AAOqB;AACpC7E,EAAAA,YAAY,EAAE1F,SAAS,CAAC0K,MAAV,CAAiBH,UARhB;AAQ4B;AAC3CpD,EAAAA,kBAAkB,EAAEnH,SAAS,CAAC0K,MAAV,CAAiBH,UATtB;AASkC;AACjDd,EAAAA,UAAU,EAAEzJ,SAAS,CAAC0K,MAAV,CAAiBH,UAVd;AAU0B;AACzCf,EAAAA,SAAS,EAAExJ,SAAS,CAAC0K,MAAV,CAAiBH,UAXb;AAWyB;AACxCb,EAAAA,gBAAgB,EAAE1J,SAAS,CAAC0K,MAAV,CAAiBH,UAZpB;AAYgC;AAC/CtC,EAAAA,SAAS,EAAEjI,SAAS,CAAC0K,MAAV,CAAiBH,UAbb;AAayB;AAExCJ,EAAAA,SAAS,EAAEnK,SAAS,CAAC2K,IAfN;AAeY;AAC3B1B,EAAAA,WAAW,EAAEjJ,SAAS,CAAC2K,IAhBR;AAiBf9B,EAAAA,QAAQ,EAAE7I,SAAS,CAAC0K,MAAV,CAAiBH,UAjBZ;AAiBwB;AACvCxB,EAAAA,QAAQ,EAAE/I,SAAS,CAAC0K,MAAV,CAAiBH,UAlBZ;AAkBwB;AAEvCrH,EAAAA,KAAK,EAAElD,SAAS,CAACwK,MApBF;AAoBU;AACzBpB,EAAAA,WAAW,EAAEpJ,SAAS,CAAC2K,IArBR;AAsBftB,EAAAA,UAAU,EAAErJ,SAAS,CAAC2K,IAtBP;AAuBflE,EAAAA,OAAO,EAAEzG,SAAS,CAAC2K,IAvBJ;AAwBfjE,EAAAA,SAAS,EAAE1G,SAAS,CAAC2K,IAxBN;AAwBc;AAC7BzC,EAAAA,kBAAkB,EAAElI,SAAS,CAAC2K,IAzBf;AAyBqB;AACpCxE,EAAAA,UAAU,EAAEnG,SAAS,CAACwK,MA1BP;AA0Be;AAC9B9G,EAAAA,MAAM,EAAG1D,SAAS,CAACyK,IA3BJ;AA4Bf9G,EAAAA,IAAI,EAAE3D,SAAS,CAAC2K,IA5BD;AA6BfnG,EAAAA,KAAK,EAAExE,SAAS,CAAC2K;AA7BF,C;AAFjBnJ,Q,CAkCKoJ,Y,GAAe;AAClB7D,EAAAA,OAAO,EAAE,IADS;AAElBkC,EAAAA,WAAW,EAAGhE,IAAD,IAAUA,IAAI,CAAC4F,IAFV;AAGlBnF,EAAAA,YAAY,EAAE,KAHI;AAIlByB,EAAAA,kBAAkB,EAAE,GAJF;AAKlBgD,EAAAA,SAAS,EAAE,CAAC1F,IAAD,EAAOqG,aAAP,KAAyBA,aALlB;AAMlB3E,EAAAA,UAAU,EAAE,KANM;AAOlB8B,EAAAA,SAAS,EAAE,EAPO;AAQlBY,EAAAA,QAAQ,EAAE,EARQ;AASlBE,EAAAA,QAAQ,EAAE,EATQ;AAUlBU,EAAAA,UAAU,EAAE,EAVM;AAWlBD,EAAAA,SAAS,EAAE,EAXO;AAYlBE,EAAAA,gBAAgB,EAAE,EAZA;AAalBhG,EAAAA,MAAM,EAAE,KAbU;AAclBC,EAAAA,IAAI,EAAEoH,OAAO,CAACC,GAdI;AAelBxG,EAAAA,KAAK,EAAEuG,OAAO,CAACE;AAfG,C;AA8V1B,eAAezJ,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\nimport shallowEqual from 'shallowequal'\n\nimport { hsl as d3Hsl } from 'd3-color';\nimport { select as d3Select, event as d3Event } from 'd3-selection';\nimport { scaleLinear as d3ScaleLinear, scaleSqrt as d3ScaleSqrt } from 'd3-scale';\nimport { hierarchy as d3Hierarchy, partition as d3Partition } from 'd3-hierarchy';\nimport { arc as d3Arc } from 'd3-shape';\nimport { path as d3Path } from 'd3-path';\nimport { interpolate as d3Interpolate } from 'd3-interpolate';\n\n// We have to import this event though we dont use it\nimport { transition as d3Transition } from 'd3-transition';\n\n/* REFS\n * zoomable /w/ labels -- https://bl.ocks.org/vasturiano/12da9071095fbd4df434e60d52d2d58d\n * text opacity -- https://gist.github.com/metmajer/5480307\n*/\n\n/**\n* Creates a zoomable Sunburst\n* @param {object} props\n* @param {object} props.data - see the d3 {@link https://github.com/defunctzombie/d3-examples/blob/master/dendrogram/flare.json|flare.json}\n    data for the shape that is required. \n* @param {string} props.width - width of svg\n* @param {string} props.height - height of svg. \n*   If width and height are not the same there will be dead space.\n* @param {number} props.count_member - what data element to use for slice size\n* @param {number} [props.radianCutoff=.01] - smallest slice to show in radians\n* @param {number} [props.transitionDuration=500] - ms for animation\n* @param {number} [props.saturation=.5] - base color saturation of slices\n* @param {number} [props.lightness=.5] - base color lightness of slices\n* @param {number} [props.child_brightness=.5] - value to lighten children slices\n* @param {number} [props.font_size=12] - for calculating if text fits\n* @param {func} [props.colorFunc=(node, current_color) => current_color]\n        - Custom color func for slices with heights > 0.\n* @param {func} [props.labelFunc] - returns text to slice\n* @param {func} [props.condensedLabelFunc] - backup function to try to fit less text\n        for smaller slices.\n* @param {func} [props.tooltipFunc=(data) => data.name]\n* @param {number} [props.tooltipX=20] - x pointer offset to show tooltip \n* @param {number} [props.tooltipY=20] - y pionter offset to show tooltip\n* @param {string} [props.domID] - will be random if undefined\n* @param {func} [props.onMouseover]\n* @param {func} [props.onMouseout]\n* @param {func} [props.onClick]\n* @param {string} [props.key_member] - data member to construct dom ids from\n*/\n//FIXME normalize function signatures\n//FIXME normalize case\nclass Sunburst extends React.Component {\n\n    static propTypes = {\n        data: PropTypes.object.isRequired,\n        width: PropTypes.string.isRequired,\n        height: PropTypes.string.isRequired,\n        count_member: PropTypes.string.isRequired,\n\n\t\t// requried /w/ default\n        tooltip: PropTypes.bool.isRequired, // FIXME get rid of this\n        radianCutoff: PropTypes.number.isRequired, // smallest slice to show in radians\n        transitionDuration: PropTypes.number.isRequired, // ms for animation\n        saturation: PropTypes.number.isRequired, // base saturation of arcs\n        lightness: PropTypes.number.isRequired, // base lightness of parent arcs\n        child_brightness: PropTypes.number.isRequired, // value to lighten children\n        font_size: PropTypes.number.isRequired, // for calculating if text fits\n\n        colorFunc: PropTypes.func, // custom colorizing for slice\n        tooltipFunc: PropTypes.func,\n        tooltipX: PropTypes.number.isRequired, // offset x to place tooltip\n        tooltipY: PropTypes.number.isRequired, // ofset y to place tooltip\n\n        domId: PropTypes.string, // will be random if undefined\n        onMouseover: PropTypes.func,\n        onMouseout: PropTypes.func,\n        onClick: PropTypes.func,\n        labelFunc: PropTypes.func,   // returns text for slice\n        condensedLabelFunc: PropTypes.func, // backup function to try to fit text\n        key_member: PropTypes.string, // unique id\n        _debug : PropTypes.bool,\n        _log: PropTypes.func,\n        _warn: PropTypes.func,\n    }\n\n    static defaultProps = {\n        tooltip: true,\n        tooltipFunc: (data) => data.name,\n        radianCutoff: .0001,\n        transitionDuration: 300,\n        colorFunc: (node, current_color) => current_color,\n        key_member: 'key',\n        font_size: 10,\n        tooltipX: 20,\n        tooltipY: 20,\n        saturation: .8,\n        lightness: .6,\n        child_brightness: .7,\n        _debug: false,\n        _log: console.log,\n        _warn: console.warn,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this._last_click = null\n        this.radius = (Math.min(this.props.width, this.props.height) / 2);\n        this.y = d3ScaleSqrt()\n            .range([0, this.radius]);\n\n        this.x= d3ScaleLinear()\n            .range([0, 2 * Math.PI])\n\n        this.arc = d3Arc()\n                .startAngle((d) => { return Math.max(0, Math.min(2 * Math.PI, this.x(d.x0))); })\n                .endAngle((d) => { return Math.max(0, Math.min(2 * Math.PI, this.x(d.x1))); })\n                .innerRadius((d) => { return Math.max(0, this.y(d.y0)); })\n                .outerRadius((d) => { return Math.max(0, this.y(d.y1)); });\n\n        this.partition = d3Partition()\n\n        this.hueDXScale = d3ScaleLinear()\n            .domain([0, 1])\n            .range([0, 360])\n\n        this.domId = this.props.domId || ('sunburst-wrapper-' + Math.round(Math.random() * 1e12).toString())\n        this.svg = null\n        this.tooltipDom = null\n        this.lastSelect = null\n    }\n\n    componentDidMount() {\n        this.props._debug && this.props._log(\"Sunburst: componentDidMount()\")\n        this._create();\n    }\n\n    shouldComponentUpdate(nextProps) {\n        this.props._debug && this.props._log(\"Sunburst: shouldComponentUpdate()\", this.props)\n        if (!shallowEqual(this.props, nextProps)) {\n            return false\n        }\n        return true\n    }\n\n    _destroy_svg() {\n        this.props._debug && this.props._log(\"Sunburst: _destroy_svg()\")\n\t\tthis.svg && this.svg.selectAll('*').remove()\n        this.svg = null\n    }\n\n    componentDidUpdate() { //prevProps\n        this.props._debug && this.props._log(\"Sunburst: componentDidUpdate()\")\n        this._destroy_svg()\n        this._create()\n    }\n\n    componentWillUnmount() {\n        this.props._debug && this.props._log(\"Sunburst: componentWillUnmount()\")\n        this._destroy_svg()\n    }\n    /**\n     * Programatically select a slice.\n     * @param id the slice key to select. This should be the key_member set in\n     * props.\n    */\n    select(id) {\n        this.props._debug && this.props._log(\"Sunburst: select(id)\")\n        const key = '#mainArc-' + id\n        const nodes = d3Select(key).nodes()\n        if (!nodes.length) {\n            this.props._warn(`could not find node with id of ${key}`)\n            return\n        }\n        const node = nodes[0].__data__\n        this._update(node)\n    }\n\n    _onClick(node) {\n        this.props._debug && this.props._log(\"Sunburst: _onClick(node)\")\n        this._last_click = node\n    }\n\n/**\n * recomputes slice colors. If the color function changes this should be called\n * to update to the new color scheme.\n*/\n    updateColor()  {\n        this.props._debug && this.props._log(\"Sunburst: updateColor()\")\n        this.svg.selectAll('path.sunburst-main-arc')\n            .style(\"fill\", (d) => d.parent ? this._colorize(d) : \"white\")\n    }\n\n    _create() {\n        this.props._debug && this.props._log(\"Sunburst: _create()\")\n        if (!this.props.data) return;\n\n        const root = d3Hierarchy(this.props.data)\n            .sum(function(d) { \n                if (d[this.props.count_member] === undefined)\n                    this.props._warn(`props.count_member (${this.props.count_member}) is not defined on data`)\n                return !d.children || d.children.length === 0 ? d[this.props.count_member] :0; \n            }.bind(this))\n        //.filter( (d) => d.depth < 4)\n\n        const data = this.partition(root)\n            .descendants()\n            .filter( (d) => d.x1 - d.x0 > this.props.radianCutoff) // 0.005 radians = 0.29 degrees\n\n        if (!this.svg) {\n            const w = this.props.width\n            const h = this.props.height\n            const el = d3Select('#' + this.domId)\n\n            this.svg = el.append('svg');\n            this.svg\n              .style('class', 'sunburst-svg')\n              .style('width', w + 'px')\n              .style('height', h + 'px')\n              .attr('viewBox', `${-w/2} ${-h/2} ${w} ${h}`);\n            //this.canvas = this.svg.append('g');\n            //this.svg = d3Select(\"svg\").append(\"g\").attr(\"id\", \"bigG\")\n\n            var gSlices = this.svg.selectAll(\"g\")\n                .data(data)\n                .enter()\n                .append(\"g\")\n\n            gSlices.exit().remove();\n\n            const key = this.props.key_member\n            gSlices.append(\"path\")\n                .attr('class', (d) => {\n                    const cursor = (!d.parent || !d.children) ? ' cursor-pointer' : ' cursor-pointer'\n                    const evenodd = d.depth%2 ? 'even-row' :  'odd-row'\n                    return `sunburst-main-arc${cursor} ${evenodd}`\n                }).attr('id', (d, i) => { \n                    return key ? `mainArc-${d.data[key]}` : `mainArc-${i}`\n                }).style(\"fill\", (d) => d.parent ? this._colorize(d) : \"#282c34\")\n                .on('click', function(node) {\n                    this._onClick(node)\n                    this.props.onClick && this.props.onClick(node);\n                    this._update(node)\n                }.bind(this))\n\n            if (this.props.labelFunc) {\n                gSlices.append('path')\n                    .attr('class', 'sunburst-hidden-arc')\n                    .attr('id', (_, i) => `hiddenArc${i}`)\n                    .attr('d', this._middleArcLine.bind(this))\n                    .style('fill', 'none')\n\n                const text = gSlices.append('text')\n                    .style('pointer-events', 'none')\n                    .style('dominant-baseline', 'middle')\n                    .style('text-anchor', 'middle')\n                //.attr('display', d => this._textFits(d) ? null : 'none') //makes all text go away\n\n                text.append('textPath')\n                    .attr('startOffset','50%')\n                    .attr('xlink:href', (_, i) => `#hiddenArc${i}` )\n                    .text(d => this._getLabelText(d) || '')\n            }\n        }\n        this.props.tooltip && this._setTooltips()\n        this._update(root)\n    }\n\n    _update(d, i, a) {\n        this.props._debug && this.props._log(\"Sunburst: _update(d, i, a)\")\n\n        if (this.lastSelect && a && this.lastSelect === a[i].id)\n            return\n\n        this.lastSelect = a && a[i].id\n\n        this.svg.transition().selectAll('textPath').attr(\"opacity\", 0);\n\n        const transition = this.svg.transition()\n\t\t  .duration(this.props.transitionDuration) // duration of transition\n\t\t  .tween(\"scale\", function() {\n\t\t\t\tvar xd = d3Interpolate(this.x.domain(), [d.x0 , d.x1]),\n\t\t\t\tyd = d3Interpolate(this.y.domain(), [d.y0 , 1]),\n\t\t\t\tyr = d3Interpolate(this.y.range(), [(d.y0 ? (20) : 0) , this.radius]);\n\t\t\t\treturn function(t) { this.x.domain(xd(t)); this.y.domain(yd(t)).range(yr(t)); }.bind(this);\n\t\t    }.bind(this))\n\n        transition.selectAll('path.sunburst-hidden-arc')\n            .attrTween('d', d => () => this._middleArcLine(d));\n\n        //.style(\"fill\", (d) => d.parent ? this._colorize(d) : \"white\")\n        transition.selectAll('path.sunburst-main-arc')\n            .attrTween('d', d => () => { \n                const arc = this.arc(d)\n                return arc\n            }).on(\"end\", (e, i, a) => {\n                if (!this.arc.innerRadius()(e)) // if its not visible\n                    return\n                // get a selection of the associated text element\n                var arcText = d3Select(a[i].parentNode).select(\"text textPath\");\n                // fade in the text element and recalculate positions\n                arcText.transition(this.props.transitionDuration /2)\n                    .attr(\"opacity\", 1)\n                    .text((d) => {\n                        const text = this._getLabelText(d)\n                        return text\n                    })\n      \t\t});\n    }\n    \n    _textFits(d, label) {\n      //  this.props._debug && this.props._log(\"Sunburst: _textFits(d, label)\")\n\n        if (!label)\n            return false\n        // changed to degress\n        const angle = (this.arc.endAngle()(d) - this.arc.startAngle()(d)) * 57.296\n        const radius = this.arc.outerRadius()(d)\n        const arclength =  10*Math.PI*radius*(angle / 360) //intially was 2*Math.PI.radius... (changed to make text only appear in inner circles)\n        return label.length * this.props.font_size < arclength //|| label.length * this.props.font_size > arclength;\n    }\n    \n\n    _getLabelText(d) {\n       // this.props._debug && this.props._log(\"Sunburst: _getLabelText(d)\")\n        var label\n        //var x\n        label = this.props.labelFunc && this.props.labelFunc(d)\n        if (this._textFits(d,label))\n            return label\n       label = this.props.condensedLabelFunc && this.props.condensedLabelFunc(d)\n       if (this._textFits(d,label))\n            return label\n        return null\n    }\n\n    _middleArcLine(d) {\n        this.props._debug && this.props._log(\"Sunburst: _middleArcLine(d)\")\n        const halfPi = Math.PI/2;\n        const angles = [this.x(d.x0) - halfPi, this.x(d.x1) - halfPi];\n        const r = Math.max(0, (this.y(d.y0) + this.y(d.y1)) / 2);\n\n        const middleAngle = (angles[1] + angles[0]) / 2;\n        const invertDirection = middleAngle > 0 && middleAngle < Math.PI; // On lower quadrants write text ccw\n        if (invertDirection) { angles.reverse(); }\n\n        const path = d3Path();\n        path.arc(0, 0, r, angles[0], angles[1], invertDirection);\n        return path.toString();\n    }\n\n    _inDomain(d) {\n        this.props._debug && this.props._log(\"Sunburst: _inDomain(d)\")\n        const d0 = this.x.domain()[0]\n        const d1 = this.x.domain()[1]\n        if (d.x0 < d0)\n            return false\n        if (d.x1 > d1)\n            return false\n        return true\n    }\n\n    _setTooltips() {\n\n        this.props._debug && this.props._log(\"Sunburst: _setTooltips(d)\")\n        this.tooltipDom = d3Select(`#${this.domId}`)\n            .append('div')\n\t\t\t.attr('class', 'sunburst-tooltip')\n            .style('position', 'absolute')\n            .style('z-index', '10')\n            .style('opacity', '0')\n            .style('text-align', 'center')\n            .style('border-radius', '8px')\n            //.style('max-width', '20em')\n            .style('pointer-events', 'none')\n            .style('background', 'lightsteelblue')\n            .style('padding', '3px')\n\n        const dx = this.props.tooltipX\n        const dy = this.props.tooltipY\n        this.svg.selectAll('path.sunburst-main-arc')\n            .on(\"mouseover\", function(d) {\t\t\n                if (this.props.tooltip) {\n                        this.tooltipDom.html(this.props.tooltipFunc(d.data))\n                            .style(\"left\", (d3Event.pageX+dx) + \"px\")\t\t\n                            .style(\"top\", (d3Event.pageY+dy) + \"px\")\n                        this.tooltipDom.transition()\n                            .style(\"opacity\", .9)\n                            .duration(200)\n\n                this.props.onMouseover && this.props.onMouseover(d.data);\n                }\n            }.bind(this))\t\t\t\t\t\n            .on(\"mouseout\", function(d) {\n                this.props.tooltip && this.tooltipDom.transition()\t\t\n                    .style(\"opacity\", 0)\n                    .duration(500)\n\n                this.props.onMouseout && this.props.onMouseout(d.data);\n            }.bind(this))\n    }\n\n    _colorize(d) {\n        this.props._debug && this.props._log(\"Sunburst: _colorize(d)\")\n        let hue;\n        const current = d;\n        if (current.depth === 0) {\n            return '#33cccc';\n        }\n        const {lightness, saturation, child_brightness} = this.props\n        if (current.depth <= 1) {\n            hue = this.hueDXScale(d.x0);\n            current.fill = d3Hsl(hue, saturation, lightness);\n            return current.fill;\n        }\n        current.fill = current.parent.fill.brighter(child_brightness);\n        const thishsl = d3Hsl(current.fill);\n        hue = this.hueDXScale(current.x0);\n        const colorshift = thishsl.h + (hue / 4); //used to be 4 made it 5 to make children darker\n        const c = d3Hsl(colorshift, thishsl.s, thishsl.l)\n        //return (this.props.colorFunc || this.props.colorFunc(d,c)) || c\n        const hasColorFn = !!this.props.colorFunc;\n        return hasColorFn ? this.props.colorFunc(d, c) : c;\n    }\n\n    // we have to render first then componentMounted will give us\n    // access to the dom\n    render() {\n        this.props._debug && this.props._log(\"Sunburst: render()\")\n        return (\n            <div className='sunburst-wrapper' id={this.domId} />\n        );\n    }\n}\n\nexport default Sunburst;"]},"metadata":{},"sourceType":"module"}