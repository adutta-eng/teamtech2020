{"ast":null,"code":"import * as d3 from 'd3';\n\nfunction formatNumberTooltip(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nexport function formatNameTooltip(d) {\n  const name = d.data.name;\n  return `${name}<br> (${formatNumberTooltip(d.value)})`;\n}\nexport function computeTextRotation(d, x) {\n  if (d.depth !== 0) {\n    return (x((d.x0 + d.x1) / 2) - Math.PI / 2) / Math.PI * 180;\n  }\n\n  return 0;\n}\nexport function wrap() {\n  const self = d3.select(this);\n  let textLength = self.node().getComputedTextLength();\n  let text = self.text();\n\n  while (textLength > 20 && text.length > 0) {\n    text = text.slice(0, -1);\n    self.text(`${text}...`);\n    textLength = self.node().getComputedTextLength();\n  }\n}\nexport function handleClick(SVG, RADIUS, ARC, x, y, d, text, context) {\n  const self = context;\n  text.transition().attr('opacity', 0);\n  SVG.transition().duration(750).tween('scale', () => {\n    const xd = d3.interpolate(x.domain(), [d.x0, d.x1]);\n    const yd = d3.interpolate(y.domain(), [d.y0, 1]);\n    const yr = d3.interpolate(y.range(), [d.y0 ? 20 : 0, RADIUS]);\n    return function (t) {\n      x.domain(xd(t));\n      y.domain(yd(t)).range(yr(t));\n    };\n  }).selectAll('path').attrTween('d', select => function () {\n    return ARC(select);\n  }).on('end', function (e) {\n    if (e.x0 > d.x0 && e.x0 < d.x1 && e.depth <= 3) {\n      const arcText = d3.select(this.parentNode).select('text');\n      arcText.transition().duration(750).attr('opacity', 1).attr('class', 'visible').attr('transform', () => `rotate(${computeTextRotation(e, x)})`).attr('x', select => y(select.y0)).text(select => self.props.label ? select.data.name : '') // eslint-disable-line no-confusing-arrow\n      .each(wrap);\n    }\n  }).selectAll('path').attrTween('d', tweenedData => function () {\n    return ARC(tweenedData);\n  });\n  self.props.onSelect(d);\n}","map":{"version":3,"sources":["/Users/laurenho/Desktop/teamtech2020/node_modules/react-sunburst-d3-v4/lib/utils.js"],"names":["d3","formatNumberTooltip","x","toString","replace","formatNameTooltip","d","name","data","value","computeTextRotation","depth","x0","x1","Math","PI","wrap","self","select","textLength","node","getComputedTextLength","text","length","slice","handleClick","SVG","RADIUS","ARC","y","context","transition","attr","duration","tween","xd","interpolate","domain","yd","y0","yr","range","t","selectAll","attrTween","on","e","arcText","parentNode","props","label","each","tweenedData","onSelect"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\n\nfunction formatNumberTooltip(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\nexport function formatNameTooltip(d) {\n  const name = d.data.name;\n  return `${name}<br> (${formatNumberTooltip(d.value)})`;\n}\nexport function computeTextRotation(d, x) {\n  if (d.depth !== 0) {\n    return ((x((d.x0 + d.x1) / 2) - (Math.PI / 2)) / Math.PI) * 180;\n  }\n  return 0;\n}\nexport function wrap() {\n  const self = d3.select(this);\n  let textLength = self.node().getComputedTextLength();\n  let text = self.text();\n  while (textLength > (20) && text.length > 0) {\n    text = text.slice(0, -1);\n    self.text(`${text}...`);\n    textLength = self.node().getComputedTextLength();\n  }\n}\nexport function handleClick(SVG, RADIUS, ARC, x, y, d, text, context) {\n  const self = context;\n  text.transition().attr('opacity', 0);\n  SVG.transition()\n    .duration(750)\n    .tween('scale', () => {\n      const xd = d3.interpolate(x.domain(), [d.x0, d.x1]);\n      const yd = d3.interpolate(y.domain(), [d.y0, 1]);\n      const yr = d3.interpolate(y.range(), [d.y0 ? 20 : 0, RADIUS]);\n      return function (t) { x.domain(xd(t)); y.domain(yd(t)).range(yr(t)); };\n    })\n    .selectAll('path')\n    .attrTween('d', select => function () { return ARC(select); })\n    .on('end', function (e) {\n      if (e.x0 > d.x0 && e.x0 < d.x1 && e.depth <= 3) {\n        const arcText = d3.select(this.parentNode).select('text');\n        arcText.transition().duration(750)\n            .attr('opacity', 1)\n            .attr('class', 'visible')\n            .attr('transform', () => `rotate(${computeTextRotation(e, x)})`)\n            .attr('x', select => y(select.y0))\n            .text(select => self.props.label ? select.data.name : '') // eslint-disable-line no-confusing-arrow\n            .each(wrap);\n      }\n    })\n    .selectAll('path')\n    .attrTween('d', tweenedData => function () { return ARC(tweenedData); });\n  self.props.onSelect(d);\n}\n"]},"metadata":{},"sourceType":"module"}